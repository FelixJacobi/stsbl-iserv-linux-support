#!/usr/bin/perl -CSDAL

use warnings;
use strict;
use IServ::Host::Detect;
use IServ::SSH;
use Stsbl::IServ::SCP; 

my ($act, $ip) = @ARGV;
my $m_unix = qr/^Unix-like/;

undef %ENV;
$ENV{PATH}= "/usr/sbin:/usr/bin:/sbin:/bin";

# check for installed print module
if (-f "/var/lib/dpkg/info/iserv-print.list")
{
  # re-generate printer list
  system "/usr/lib/iserv/print_generate_list";

  fork and exit;
  open STDIN, "/dev/null" or die $!;
  open STDOUT, ">/dev/null" or die $!;
  open STDERR, ">/dev/null" or die $!;
 
  my @tests = ("sshd");
  # determine online IPs; dead IPs have long timeouts
  my $result = IServ::Host::Detect::Analyze([$ip], \@tests, 1);

  if (defined $result->{$ip}{os} and $result->{$ip}{os} =~ $m_unix)
  {
    # copy current keyrings and install them
    Stsbl::IServ::SCP::scp $ip, "/usr/share/iserv/security/apt-keys/iserv.gpg", ":/tmp/iserv.gpg";
    Stsbl::IServ::SCP::scp $ip, "/usr/share/iserv/security/apt-keys/stsbl.gpg", ":/tmp/stsbl.gpg";
    IServ::SSH::ssh_run $ip, "apt-key add /tmp/iserv.gpg /tmp/stsbl.gpg";

    # copy printer script
    Stsbl::IServ::SCP::scp $ip, "/usr/share/iserv/print/linux/setup.sh", ":/tmp/printer-setup.sh";

    # run printer script remotely
    IServ::SSH::ssh_run $ip, 'bash -c "/tmp/printer-setup.sh > /tmp/printer-setup.log"';
  }
}
